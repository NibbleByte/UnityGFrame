//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Packages/devlocker.gframe/SampleGame/Prefabs/SamplePlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace DevLocker.GFrame.SampleGame.Game
{
    public partial class @SamplePlayerControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @SamplePlayerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""SamplePlayerControls"",
    ""maps"": [
        {
            ""name"": ""Sample_PlayJumper"",
            ""id"": ""9cb11c57-6035-4442-b6b4-fb85c51dc04a"",
            ""actions"": [
                {
                    ""name"": ""JumperMovement"",
                    ""type"": ""Value"",
                    ""id"": ""15330b3f-1251-45fc-9096-629784c0210a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""JumperJump"",
                    ""type"": ""Button"",
                    ""id"": ""7ad6e614-2658-40c7-932a-9d41693753b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToChopper"",
                    ""type"": ""Button"",
                    ""id"": ""882b3af6-d8ad-4838-af0d-50e718002fca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fbd6776d-cc85-48bb-962b-3b856376eaa9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""JumperJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""143bb1cd-cc10-4eca-a2f0-a3664166fe91"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""JumperJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d63d413-5f28-4f5d-a026-3e85cdfbadc2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchToChopper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Alternative CTRL+T"",
                    ""id"": ""738180d2-3e63-4ab8-b521-02cc4f20d3d6"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToChopper"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""9ed2b32f-8380-4540-b2c2-259edd4c2773"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchToChopper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""af122e41-c6a7-4099-9f48-68b12cf55253"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchToChopper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""521f1363-4aa0-4957-bd7e-389f45ca36e5"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchToChopper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2016e497-0134-43ea-ba7a-2590eac18244"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SwitchToChopper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""SomeArrows"",
                    ""id"": ""d12fc299-382b-4638-be0b-8b8752ed8461"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""976c90a9-2b96-45ea-ad0f-017f50c2295f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6ede4621-5616-4ba7-b24b-eb3a03d34f27"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AD"",
                    ""id"": ""c5cdf313-ac44-4213-b9fe-bf1ad711a8e3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""5c13ed70-9c31-4e70-89f8-370b4e6ed783"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b44cb001-8ddf-4f74-8c82-70f8253e12c8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""be16b3de-e5b2-4439-8583-bafc876a0e68"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8b9ddf48-b132-4ea1-9d2d-cfe82a16c05e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""db2b9a49-ab8a-422b-8112-bfd5d8f56c5c"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""JumperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Sample_PlayChopper"",
            ""id"": ""4c44cb70-470a-4c8a-a8b6-f562605bacd2"",
            ""actions"": [
                {
                    ""name"": ""ChopperMovement"",
                    ""type"": ""Value"",
                    ""id"": ""e5dc01de-2eb3-4d9b-825c-2e7e12001644"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchToJumper"",
                    ""type"": ""Button"",
                    ""id"": ""7d2cc9a1-28b7-459f-9d25-41965bdda9b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""370f92a8-f0cb-4784-8f40-26f861138326"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchToJumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Alternative CTRL+T"",
                    ""id"": ""8ad7bff5-c850-43b0-9e03-5ff66940f949"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToJumper"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""a88a60c8-783e-42aa-8872-4bc271bcf1bf"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchToJumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""d242f31f-36df-49dc-a910-f648b4f63441"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchToJumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cb4fd844-a44c-471f-b23a-b4c975bc1a3c"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SwitchToJumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b6fea6a-97a6-4ffc-9ed1-a8e6579f9687"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SwitchToJumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AllArrows"",
                    ""id"": ""3cee4b22-c99b-4ffc-9b82-b0ea71b462ef"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e24a5715-deef-4dce-a710-e2cdd5ebfbb9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7b45783d-f725-4696-b93e-56538cfb7292"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7eb20013-d00b-4a02-9d3b-22a674886073"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""50a2458a-1ce7-4fce-a664-15fa6e2a8ba4"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""b65b3050-133c-4c3a-ad51-927821afbd7f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""37170608-49ce-4d0a-a783-aa08ce23eec0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bf931831-7e74-4abb-a39f-77ca6a1154a4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7464aca8-0179-4b63-bf60-2ff565f08b60"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""69fede6e-edf6-4893-8866-788a54e53b0e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0d46dcc3-1425-47db-843c-66ba85bb0d0c"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChopperMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Sample_PlayShared"",
            ""id"": ""31910e90-aaf6-4365-8ae6-f48836710769"",
            ""actions"": [
                {
                    ""name"": ""ToggleMenu"",
                    ""type"": ""Button"",
                    ""id"": ""36ad07ff-2f06-4744-84c1-304f39e36653"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4a743f81-f59c-4d7e-93a2-5b6bd79836a3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ToggleMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f3db0ba-a088-416e-9fd5-c7e03fc19609"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ToggleMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7622fb5c-346c-48a9-83e5-230709c3d7b1"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ToggleMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Sample_UI"",
            ""id"": ""36699a9d-0fc8-428a-941c-cd7c0d64be36"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""54525046-29d2-4cda-aaec-a9b82a378ec7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""PassThrough"",
                    ""id"": ""279b44f2-1205-4c28-b887-362c4943c659"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dcea39f7-1e91-4a47-9e1d-a65ca4cd0e06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ad9e3e2f-9e9a-45e9-99ee-8b5cdc9c4f35"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2be8c320-66bd-4c7d-928e-3b58efec8203"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b7ba00c9-cd6e-428c-b724-11b6ec118b42"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""98a7491d-0609-49ac-aa6d-b8ebb3518e89"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9eaf26e4-8d08-406c-aba9-1318e475f693"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dc03e0d8-fd60-4eda-87e9-e73abdf8057b"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""90d54a8c-9c4d-47ec-9510-e5322715eff2"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""809f371f-c5e2-4e7a-83a1-d867598f40dd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""14a5d6e8-4aaf-4119-a9ef-34b8c2c548bf"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2db08d65-c5fb-421b-983f-c71163608d67"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ba04515-75aa-45de-966d-393d9bbd1c14"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcd248ae-a788-4676-a12e-f4d81205600b"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fb8277d4-c5cd-4663-9dc7-ee3f0b506d90"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""e25d9774-381c-4a61-b47c-7b6b299ad9f9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""ff527021-f211-4c02-933e-5976594c46ed"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""563fbfdd-0f09-408d-aa75-8642c4f08ef0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""eb480147-c587-4a33-85ed-eb0ab9942c43"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2bf42165-60bc-42ca-8072-8c13ab40239b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""85d264ad-e0a0-4565-b7ff-1a37edde51ac"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""74214943-c580-44e4-98eb-ad7eebe17902"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cea9b045-a000-445b-95b8-0c171af70a3b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8607c725-d935-4808-84b1-8354e29bab63"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4cda81dc-9edd-4e03-9d7c-a71a14345d0b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9e92bb26-7e3b-4ec4-b06b-3c8f8e498ddc"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Keyboard&Mouse;Touch"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82627dcc-3b13-4ba9-841d-e4b746d6553e"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch;Gamepad;Keyboard&Mouse"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c52c8e0b-8179-41d3-b8a1-d149033bbe86"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1394cbc-336e-44ce-9ea8-6007ed6193f7"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5693e57a-238a-46ed-b5ae-e64e6e574302"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4faf7dc9-b979-4210-aa8c-e808e1ef89f5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d66d5ba-88d7-48e6-b1cd-198bbfef7ace"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47c2a644-3ebc-4dae-a106-589b7ca75b59"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38c99815-14ea-4617-8627-164d27641299"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24066f69-da47-44f3-a07e-0015fb02eb2e"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c191405-5738-4d4b-a523-c6a301dbf754"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Sample_CommonHotkeys"",
            ""id"": ""c0dd4bb8-b434-48e5-bcd8-e3f6590ba5c9"",
            ""actions"": [
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""3bbe5692-1874-443b-93f6-cb8a7eea718a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""dd40e659-2525-4a8c-a56d-9e5ce74051a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextSection"",
                    ""type"": ""Button"",
                    ""id"": ""3abb3d3f-b486-4f63-abe0-f795fb1342cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrevSection"",
                    ""type"": ""Button"",
                    ""id"": ""3ea85ef3-5f21-4ad3-a0c8-31b003bd8a53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextListEntry"",
                    ""type"": ""Button"",
                    ""id"": ""febb67b0-2320-4791-ba0d-23e8be6a77f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrevListEntry"",
                    ""type"": ""Button"",
                    ""id"": ""f3135e94-409a-429d-982e-38916ffa8164"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HorizontalScroll"",
                    ""type"": ""Value"",
                    ""id"": ""5d4298a6-0ad3-4fb9-84b6-b5037a41c751"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""VerticalScroll"",
                    ""type"": ""Value"",
                    ""id"": ""b1b2f2f6-7286-43e1-93fa-236bf9bbb55b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""11b0552b-44df-4cc7-acd5-bf6c669f5c22"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46062f62-4509-4337-ab88-cafdae202cdf"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e856c71-d343-443e-9761-dd29c3282071"",
                    ""path"": ""*/{Back}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Keyboard&Mouse"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9264633-0d18-4c29-a1ad-34bda9ec34fb"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1744cc73-c376-483c-9a2d-832ae0cf6636"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""589d6359-788e-4ce2-bebd-99f58690a87b"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Keyboard&Mouse"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba42f8fa-228c-48bc-acc5-94c9a59f7e5e"",
                    ""path"": ""<Keyboard>/rightBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NextSection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70a8a5fd-1eda-43af-a842-7bb55d332651"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NextSection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84bc279e-720c-4858-acda-f6d9a1cc8b9d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NextListEntry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ea3fef6-6e53-458d-8cda-f2233197531f"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NextListEntry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62ae90ce-9021-4feb-b5d4-4c84912b8f00"",
                    ""path"": ""<Keyboard>/leftBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PrevSection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef978be4-7a5e-4298-858a-d8131888dae3"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PrevSection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6008d5f6-2339-4f5b-a698-efb05a3b0ad8"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PrevListEntry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e98eabfd-31e7-44d3-92c5-e4e0e5748b5a"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PrevListEntry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26786a29-3c92-4cc8-acff-83fb453d75b8"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PrevListEntry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""530388bf-ad14-4ce7-a71f-6981944c2f7c"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NextListEntry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""39c755b8-811d-4a6f-abac-6d575b0fe70b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""fbfa6ec7-2ce6-4e53-a55b-d2b40d397f84"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e9149de1-8776-41ea-b3db-d3c341186369"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""HorizontalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""74208213-82ac-485f-bc2b-9e59b93a4e99"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""73504116-21bd-432d-90ff-ae3d0edabe14"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7e6839cd-a7d1-43c0-b3a8-9d7375569a2b"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""VerticalScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Sample_UITester"",
            ""id"": ""caa998c5-d0c8-46c7-b7ec-f1cfe1fc0715"",
            ""actions"": [
                {
                    ""name"": ""TestHotkeyA"",
                    ""type"": ""Button"",
                    ""id"": ""cb72ec70-a019-4245-91b7-97a372ced4b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestHotkeyHoldA"",
                    ""type"": ""Button"",
                    ""id"": ""275a3e1f-c219-49b2-bd03-36cee54dd3c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestHotkeyB"",
                    ""type"": ""Button"",
                    ""id"": ""092d4590-f7e2-4667-9117-91d862ce9d6f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestHotkeyX"",
                    ""type"": ""Button"",
                    ""id"": ""455d6408-8e15-400f-882e-2c928dc89710"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestHotkeyHoldX"",
                    ""type"": ""Button"",
                    ""id"": ""72df1c06-0cf2-425e-bc25-ab32b463ca8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestHotkeyY"",
                    ""type"": ""Button"",
                    ""id"": ""623dfe61-d955-4a3a-8507-77cc105f4fd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestHotkeyKeyboardOnly"",
                    ""type"": ""Button"",
                    ""id"": ""54761322-cab6-4ee7-962e-39b21d633f1c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b5dc8df7-3e90-48f2-a165-55e016b4ff49"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TestHotkeyA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a82b9fe6-6255-44bc-ac32-3df77b601bad"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TestHotkeyA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f41fb754-e949-4784-94ec-39484e2f2fe7"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TestHotkeyB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3345a69-99af-40f8-b09f-cca0fe5a17ad"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TestHotkeyB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c81f73d8-f0ab-40cb-8c17-86448608979e"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TestHotkeyX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec744ad0-8a0f-4ddb-92ed-30f5332ca138"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TestHotkeyX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5ba1bdd-f8e9-41d3-ad2a-e60936db54c2"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TestHotkeyY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ed9d220-df59-4f38-a905-67b6f2e7743c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TestHotkeyY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d83e82f6-a1c3-45ef-8266-f6fbebd8e0b9"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TestHotkeyHoldA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2892bf5-c71f-480f-8f23-da26c87f1a6f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TestHotkeyHoldA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0083a411-1ba5-46d3-8eac-89e0dcfb4b19"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TestHotkeyHoldX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e6f4fa4-f73a-4b94-ad55-f9d1d43f807e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TestHotkeyHoldX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Shift+T"",
                    ""id"": ""de7bfca0-4e22-4b3b-bcef-1ecc2c2f7490"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TestHotkeyKeyboardOnly"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""85000801-45aa-4bfb-be40-127b23d6230c"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TestHotkeyKeyboardOnly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""a8faa140-cb59-406a-b7c2-ec98a24223eb"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TestHotkeyKeyboardOnly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Sample_PlayJumper
            m_Sample_PlayJumper = asset.FindActionMap("Sample_PlayJumper", throwIfNotFound: true);
            m_Sample_PlayJumper_JumperMovement = m_Sample_PlayJumper.FindAction("JumperMovement", throwIfNotFound: true);
            m_Sample_PlayJumper_JumperJump = m_Sample_PlayJumper.FindAction("JumperJump", throwIfNotFound: true);
            m_Sample_PlayJumper_SwitchToChopper = m_Sample_PlayJumper.FindAction("SwitchToChopper", throwIfNotFound: true);
            // Sample_PlayChopper
            m_Sample_PlayChopper = asset.FindActionMap("Sample_PlayChopper", throwIfNotFound: true);
            m_Sample_PlayChopper_ChopperMovement = m_Sample_PlayChopper.FindAction("ChopperMovement", throwIfNotFound: true);
            m_Sample_PlayChopper_SwitchToJumper = m_Sample_PlayChopper.FindAction("SwitchToJumper", throwIfNotFound: true);
            // Sample_PlayShared
            m_Sample_PlayShared = asset.FindActionMap("Sample_PlayShared", throwIfNotFound: true);
            m_Sample_PlayShared_ToggleMenu = m_Sample_PlayShared.FindAction("ToggleMenu", throwIfNotFound: true);
            // Sample_UI
            m_Sample_UI = asset.FindActionMap("Sample_UI", throwIfNotFound: true);
            m_Sample_UI_Navigate = m_Sample_UI.FindAction("Navigate", throwIfNotFound: true);
            m_Sample_UI_Submit = m_Sample_UI.FindAction("Submit", throwIfNotFound: true);
            m_Sample_UI_Cancel = m_Sample_UI.FindAction("Cancel", throwIfNotFound: true);
            m_Sample_UI_Point = m_Sample_UI.FindAction("Point", throwIfNotFound: true);
            m_Sample_UI_Click = m_Sample_UI.FindAction("Click", throwIfNotFound: true);
            m_Sample_UI_ScrollWheel = m_Sample_UI.FindAction("ScrollWheel", throwIfNotFound: true);
            m_Sample_UI_MiddleClick = m_Sample_UI.FindAction("MiddleClick", throwIfNotFound: true);
            m_Sample_UI_RightClick = m_Sample_UI.FindAction("RightClick", throwIfNotFound: true);
            m_Sample_UI_TrackedDevicePosition = m_Sample_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
            m_Sample_UI_TrackedDeviceOrientation = m_Sample_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
            // Sample_CommonHotkeys
            m_Sample_CommonHotkeys = asset.FindActionMap("Sample_CommonHotkeys", throwIfNotFound: true);
            m_Sample_CommonHotkeys_Back = m_Sample_CommonHotkeys.FindAction("Back", throwIfNotFound: true);
            m_Sample_CommonHotkeys_Confirm = m_Sample_CommonHotkeys.FindAction("Confirm", throwIfNotFound: true);
            m_Sample_CommonHotkeys_NextSection = m_Sample_CommonHotkeys.FindAction("NextSection", throwIfNotFound: true);
            m_Sample_CommonHotkeys_PrevSection = m_Sample_CommonHotkeys.FindAction("PrevSection", throwIfNotFound: true);
            m_Sample_CommonHotkeys_NextListEntry = m_Sample_CommonHotkeys.FindAction("NextListEntry", throwIfNotFound: true);
            m_Sample_CommonHotkeys_PrevListEntry = m_Sample_CommonHotkeys.FindAction("PrevListEntry", throwIfNotFound: true);
            m_Sample_CommonHotkeys_HorizontalScroll = m_Sample_CommonHotkeys.FindAction("HorizontalScroll", throwIfNotFound: true);
            m_Sample_CommonHotkeys_VerticalScroll = m_Sample_CommonHotkeys.FindAction("VerticalScroll", throwIfNotFound: true);
            // Sample_UITester
            m_Sample_UITester = asset.FindActionMap("Sample_UITester", throwIfNotFound: true);
            m_Sample_UITester_TestHotkeyA = m_Sample_UITester.FindAction("TestHotkeyA", throwIfNotFound: true);
            m_Sample_UITester_TestHotkeyHoldA = m_Sample_UITester.FindAction("TestHotkeyHoldA", throwIfNotFound: true);
            m_Sample_UITester_TestHotkeyB = m_Sample_UITester.FindAction("TestHotkeyB", throwIfNotFound: true);
            m_Sample_UITester_TestHotkeyX = m_Sample_UITester.FindAction("TestHotkeyX", throwIfNotFound: true);
            m_Sample_UITester_TestHotkeyHoldX = m_Sample_UITester.FindAction("TestHotkeyHoldX", throwIfNotFound: true);
            m_Sample_UITester_TestHotkeyY = m_Sample_UITester.FindAction("TestHotkeyY", throwIfNotFound: true);
            m_Sample_UITester_TestHotkeyKeyboardOnly = m_Sample_UITester.FindAction("TestHotkeyKeyboardOnly", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Sample_PlayJumper
        private readonly InputActionMap m_Sample_PlayJumper;
        private ISample_PlayJumperActions m_Sample_PlayJumperActionsCallbackInterface;
        private readonly InputAction m_Sample_PlayJumper_JumperMovement;
        private readonly InputAction m_Sample_PlayJumper_JumperJump;
        private readonly InputAction m_Sample_PlayJumper_SwitchToChopper;
        public struct Sample_PlayJumperActions
        {
            private @SamplePlayerControls m_Wrapper;
            public Sample_PlayJumperActions(@SamplePlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @JumperMovement => m_Wrapper.m_Sample_PlayJumper_JumperMovement;
            public InputAction @JumperJump => m_Wrapper.m_Sample_PlayJumper_JumperJump;
            public InputAction @SwitchToChopper => m_Wrapper.m_Sample_PlayJumper_SwitchToChopper;
            public InputActionMap Get() { return m_Wrapper.m_Sample_PlayJumper; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Sample_PlayJumperActions set) { return set.Get(); }
            public void SetCallbacks(ISample_PlayJumperActions instance)
            {
                if (m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface != null)
                {
                    @JumperMovement.started -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnJumperMovement;
                    @JumperMovement.performed -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnJumperMovement;
                    @JumperMovement.canceled -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnJumperMovement;
                    @JumperJump.started -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnJumperJump;
                    @JumperJump.performed -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnJumperJump;
                    @JumperJump.canceled -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnJumperJump;
                    @SwitchToChopper.started -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnSwitchToChopper;
                    @SwitchToChopper.performed -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnSwitchToChopper;
                    @SwitchToChopper.canceled -= m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface.OnSwitchToChopper;
                }
                m_Wrapper.m_Sample_PlayJumperActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @JumperMovement.started += instance.OnJumperMovement;
                    @JumperMovement.performed += instance.OnJumperMovement;
                    @JumperMovement.canceled += instance.OnJumperMovement;
                    @JumperJump.started += instance.OnJumperJump;
                    @JumperJump.performed += instance.OnJumperJump;
                    @JumperJump.canceled += instance.OnJumperJump;
                    @SwitchToChopper.started += instance.OnSwitchToChopper;
                    @SwitchToChopper.performed += instance.OnSwitchToChopper;
                    @SwitchToChopper.canceled += instance.OnSwitchToChopper;
                }
            }
        }
        public Sample_PlayJumperActions @Sample_PlayJumper => new Sample_PlayJumperActions(this);

        // Sample_PlayChopper
        private readonly InputActionMap m_Sample_PlayChopper;
        private ISample_PlayChopperActions m_Sample_PlayChopperActionsCallbackInterface;
        private readonly InputAction m_Sample_PlayChopper_ChopperMovement;
        private readonly InputAction m_Sample_PlayChopper_SwitchToJumper;
        public struct Sample_PlayChopperActions
        {
            private @SamplePlayerControls m_Wrapper;
            public Sample_PlayChopperActions(@SamplePlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @ChopperMovement => m_Wrapper.m_Sample_PlayChopper_ChopperMovement;
            public InputAction @SwitchToJumper => m_Wrapper.m_Sample_PlayChopper_SwitchToJumper;
            public InputActionMap Get() { return m_Wrapper.m_Sample_PlayChopper; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Sample_PlayChopperActions set) { return set.Get(); }
            public void SetCallbacks(ISample_PlayChopperActions instance)
            {
                if (m_Wrapper.m_Sample_PlayChopperActionsCallbackInterface != null)
                {
                    @ChopperMovement.started -= m_Wrapper.m_Sample_PlayChopperActionsCallbackInterface.OnChopperMovement;
                    @ChopperMovement.performed -= m_Wrapper.m_Sample_PlayChopperActionsCallbackInterface.OnChopperMovement;
                    @ChopperMovement.canceled -= m_Wrapper.m_Sample_PlayChopperActionsCallbackInterface.OnChopperMovement;
                    @SwitchToJumper.started -= m_Wrapper.m_Sample_PlayChopperActionsCallbackInterface.OnSwitchToJumper;
                    @SwitchToJumper.performed -= m_Wrapper.m_Sample_PlayChopperActionsCallbackInterface.OnSwitchToJumper;
                    @SwitchToJumper.canceled -= m_Wrapper.m_Sample_PlayChopperActionsCallbackInterface.OnSwitchToJumper;
                }
                m_Wrapper.m_Sample_PlayChopperActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @ChopperMovement.started += instance.OnChopperMovement;
                    @ChopperMovement.performed += instance.OnChopperMovement;
                    @ChopperMovement.canceled += instance.OnChopperMovement;
                    @SwitchToJumper.started += instance.OnSwitchToJumper;
                    @SwitchToJumper.performed += instance.OnSwitchToJumper;
                    @SwitchToJumper.canceled += instance.OnSwitchToJumper;
                }
            }
        }
        public Sample_PlayChopperActions @Sample_PlayChopper => new Sample_PlayChopperActions(this);

        // Sample_PlayShared
        private readonly InputActionMap m_Sample_PlayShared;
        private ISample_PlaySharedActions m_Sample_PlaySharedActionsCallbackInterface;
        private readonly InputAction m_Sample_PlayShared_ToggleMenu;
        public struct Sample_PlaySharedActions
        {
            private @SamplePlayerControls m_Wrapper;
            public Sample_PlaySharedActions(@SamplePlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @ToggleMenu => m_Wrapper.m_Sample_PlayShared_ToggleMenu;
            public InputActionMap Get() { return m_Wrapper.m_Sample_PlayShared; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Sample_PlaySharedActions set) { return set.Get(); }
            public void SetCallbacks(ISample_PlaySharedActions instance)
            {
                if (m_Wrapper.m_Sample_PlaySharedActionsCallbackInterface != null)
                {
                    @ToggleMenu.started -= m_Wrapper.m_Sample_PlaySharedActionsCallbackInterface.OnToggleMenu;
                    @ToggleMenu.performed -= m_Wrapper.m_Sample_PlaySharedActionsCallbackInterface.OnToggleMenu;
                    @ToggleMenu.canceled -= m_Wrapper.m_Sample_PlaySharedActionsCallbackInterface.OnToggleMenu;
                }
                m_Wrapper.m_Sample_PlaySharedActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @ToggleMenu.started += instance.OnToggleMenu;
                    @ToggleMenu.performed += instance.OnToggleMenu;
                    @ToggleMenu.canceled += instance.OnToggleMenu;
                }
            }
        }
        public Sample_PlaySharedActions @Sample_PlayShared => new Sample_PlaySharedActions(this);

        // Sample_UI
        private readonly InputActionMap m_Sample_UI;
        private ISample_UIActions m_Sample_UIActionsCallbackInterface;
        private readonly InputAction m_Sample_UI_Navigate;
        private readonly InputAction m_Sample_UI_Submit;
        private readonly InputAction m_Sample_UI_Cancel;
        private readonly InputAction m_Sample_UI_Point;
        private readonly InputAction m_Sample_UI_Click;
        private readonly InputAction m_Sample_UI_ScrollWheel;
        private readonly InputAction m_Sample_UI_MiddleClick;
        private readonly InputAction m_Sample_UI_RightClick;
        private readonly InputAction m_Sample_UI_TrackedDevicePosition;
        private readonly InputAction m_Sample_UI_TrackedDeviceOrientation;
        public struct Sample_UIActions
        {
            private @SamplePlayerControls m_Wrapper;
            public Sample_UIActions(@SamplePlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Navigate => m_Wrapper.m_Sample_UI_Navigate;
            public InputAction @Submit => m_Wrapper.m_Sample_UI_Submit;
            public InputAction @Cancel => m_Wrapper.m_Sample_UI_Cancel;
            public InputAction @Point => m_Wrapper.m_Sample_UI_Point;
            public InputAction @Click => m_Wrapper.m_Sample_UI_Click;
            public InputAction @ScrollWheel => m_Wrapper.m_Sample_UI_ScrollWheel;
            public InputAction @MiddleClick => m_Wrapper.m_Sample_UI_MiddleClick;
            public InputAction @RightClick => m_Wrapper.m_Sample_UI_RightClick;
            public InputAction @TrackedDevicePosition => m_Wrapper.m_Sample_UI_TrackedDevicePosition;
            public InputAction @TrackedDeviceOrientation => m_Wrapper.m_Sample_UI_TrackedDeviceOrientation;
            public InputActionMap Get() { return m_Wrapper.m_Sample_UI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Sample_UIActions set) { return set.Get(); }
            public void SetCallbacks(ISample_UIActions instance)
            {
                if (m_Wrapper.m_Sample_UIActionsCallbackInterface != null)
                {
                    @Navigate.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnNavigate;
                    @Navigate.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnNavigate;
                    @Navigate.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnNavigate;
                    @Submit.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnSubmit;
                    @Submit.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnSubmit;
                    @Submit.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnSubmit;
                    @Cancel.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnCancel;
                    @Cancel.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnCancel;
                    @Cancel.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnCancel;
                    @Point.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnPoint;
                    @Point.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnPoint;
                    @Point.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnPoint;
                    @Click.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnClick;
                    @Click.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnClick;
                    @Click.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnClick;
                    @ScrollWheel.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnScrollWheel;
                    @ScrollWheel.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnScrollWheel;
                    @ScrollWheel.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnScrollWheel;
                    @MiddleClick.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnMiddleClick;
                    @MiddleClick.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnMiddleClick;
                    @MiddleClick.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnMiddleClick;
                    @RightClick.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnRightClick;
                    @RightClick.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnRightClick;
                    @RightClick.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnRightClick;
                    @TrackedDevicePosition.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnTrackedDevicePosition;
                    @TrackedDevicePosition.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnTrackedDevicePosition;
                    @TrackedDevicePosition.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnTrackedDevicePosition;
                    @TrackedDeviceOrientation.started -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                    @TrackedDeviceOrientation.performed -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                    @TrackedDeviceOrientation.canceled -= m_Wrapper.m_Sample_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                }
                m_Wrapper.m_Sample_UIActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Navigate.started += instance.OnNavigate;
                    @Navigate.performed += instance.OnNavigate;
                    @Navigate.canceled += instance.OnNavigate;
                    @Submit.started += instance.OnSubmit;
                    @Submit.performed += instance.OnSubmit;
                    @Submit.canceled += instance.OnSubmit;
                    @Cancel.started += instance.OnCancel;
                    @Cancel.performed += instance.OnCancel;
                    @Cancel.canceled += instance.OnCancel;
                    @Point.started += instance.OnPoint;
                    @Point.performed += instance.OnPoint;
                    @Point.canceled += instance.OnPoint;
                    @Click.started += instance.OnClick;
                    @Click.performed += instance.OnClick;
                    @Click.canceled += instance.OnClick;
                    @ScrollWheel.started += instance.OnScrollWheel;
                    @ScrollWheel.performed += instance.OnScrollWheel;
                    @ScrollWheel.canceled += instance.OnScrollWheel;
                    @MiddleClick.started += instance.OnMiddleClick;
                    @MiddleClick.performed += instance.OnMiddleClick;
                    @MiddleClick.canceled += instance.OnMiddleClick;
                    @RightClick.started += instance.OnRightClick;
                    @RightClick.performed += instance.OnRightClick;
                    @RightClick.canceled += instance.OnRightClick;
                    @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                    @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                    @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                    @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                    @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                    @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
                }
            }
        }
        public Sample_UIActions @Sample_UI => new Sample_UIActions(this);

        // Sample_CommonHotkeys
        private readonly InputActionMap m_Sample_CommonHotkeys;
        private ISample_CommonHotkeysActions m_Sample_CommonHotkeysActionsCallbackInterface;
        private readonly InputAction m_Sample_CommonHotkeys_Back;
        private readonly InputAction m_Sample_CommonHotkeys_Confirm;
        private readonly InputAction m_Sample_CommonHotkeys_NextSection;
        private readonly InputAction m_Sample_CommonHotkeys_PrevSection;
        private readonly InputAction m_Sample_CommonHotkeys_NextListEntry;
        private readonly InputAction m_Sample_CommonHotkeys_PrevListEntry;
        private readonly InputAction m_Sample_CommonHotkeys_HorizontalScroll;
        private readonly InputAction m_Sample_CommonHotkeys_VerticalScroll;
        public struct Sample_CommonHotkeysActions
        {
            private @SamplePlayerControls m_Wrapper;
            public Sample_CommonHotkeysActions(@SamplePlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Back => m_Wrapper.m_Sample_CommonHotkeys_Back;
            public InputAction @Confirm => m_Wrapper.m_Sample_CommonHotkeys_Confirm;
            public InputAction @NextSection => m_Wrapper.m_Sample_CommonHotkeys_NextSection;
            public InputAction @PrevSection => m_Wrapper.m_Sample_CommonHotkeys_PrevSection;
            public InputAction @NextListEntry => m_Wrapper.m_Sample_CommonHotkeys_NextListEntry;
            public InputAction @PrevListEntry => m_Wrapper.m_Sample_CommonHotkeys_PrevListEntry;
            public InputAction @HorizontalScroll => m_Wrapper.m_Sample_CommonHotkeys_HorizontalScroll;
            public InputAction @VerticalScroll => m_Wrapper.m_Sample_CommonHotkeys_VerticalScroll;
            public InputActionMap Get() { return m_Wrapper.m_Sample_CommonHotkeys; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Sample_CommonHotkeysActions set) { return set.Get(); }
            public void SetCallbacks(ISample_CommonHotkeysActions instance)
            {
                if (m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface != null)
                {
                    @Back.started -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnBack;
                    @Back.performed -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnBack;
                    @Back.canceled -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnBack;
                    @Confirm.started -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnConfirm;
                    @Confirm.performed -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnConfirm;
                    @Confirm.canceled -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnConfirm;
                    @NextSection.started -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnNextSection;
                    @NextSection.performed -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnNextSection;
                    @NextSection.canceled -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnNextSection;
                    @PrevSection.started -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnPrevSection;
                    @PrevSection.performed -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnPrevSection;
                    @PrevSection.canceled -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnPrevSection;
                    @NextListEntry.started -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnNextListEntry;
                    @NextListEntry.performed -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnNextListEntry;
                    @NextListEntry.canceled -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnNextListEntry;
                    @PrevListEntry.started -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnPrevListEntry;
                    @PrevListEntry.performed -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnPrevListEntry;
                    @PrevListEntry.canceled -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnPrevListEntry;
                    @HorizontalScroll.started -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnHorizontalScroll;
                    @HorizontalScroll.performed -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnHorizontalScroll;
                    @HorizontalScroll.canceled -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnHorizontalScroll;
                    @VerticalScroll.started -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnVerticalScroll;
                    @VerticalScroll.performed -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnVerticalScroll;
                    @VerticalScroll.canceled -= m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface.OnVerticalScroll;
                }
                m_Wrapper.m_Sample_CommonHotkeysActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Back.started += instance.OnBack;
                    @Back.performed += instance.OnBack;
                    @Back.canceled += instance.OnBack;
                    @Confirm.started += instance.OnConfirm;
                    @Confirm.performed += instance.OnConfirm;
                    @Confirm.canceled += instance.OnConfirm;
                    @NextSection.started += instance.OnNextSection;
                    @NextSection.performed += instance.OnNextSection;
                    @NextSection.canceled += instance.OnNextSection;
                    @PrevSection.started += instance.OnPrevSection;
                    @PrevSection.performed += instance.OnPrevSection;
                    @PrevSection.canceled += instance.OnPrevSection;
                    @NextListEntry.started += instance.OnNextListEntry;
                    @NextListEntry.performed += instance.OnNextListEntry;
                    @NextListEntry.canceled += instance.OnNextListEntry;
                    @PrevListEntry.started += instance.OnPrevListEntry;
                    @PrevListEntry.performed += instance.OnPrevListEntry;
                    @PrevListEntry.canceled += instance.OnPrevListEntry;
                    @HorizontalScroll.started += instance.OnHorizontalScroll;
                    @HorizontalScroll.performed += instance.OnHorizontalScroll;
                    @HorizontalScroll.canceled += instance.OnHorizontalScroll;
                    @VerticalScroll.started += instance.OnVerticalScroll;
                    @VerticalScroll.performed += instance.OnVerticalScroll;
                    @VerticalScroll.canceled += instance.OnVerticalScroll;
                }
            }
        }
        public Sample_CommonHotkeysActions @Sample_CommonHotkeys => new Sample_CommonHotkeysActions(this);

        // Sample_UITester
        private readonly InputActionMap m_Sample_UITester;
        private ISample_UITesterActions m_Sample_UITesterActionsCallbackInterface;
        private readonly InputAction m_Sample_UITester_TestHotkeyA;
        private readonly InputAction m_Sample_UITester_TestHotkeyHoldA;
        private readonly InputAction m_Sample_UITester_TestHotkeyB;
        private readonly InputAction m_Sample_UITester_TestHotkeyX;
        private readonly InputAction m_Sample_UITester_TestHotkeyHoldX;
        private readonly InputAction m_Sample_UITester_TestHotkeyY;
        private readonly InputAction m_Sample_UITester_TestHotkeyKeyboardOnly;
        public struct Sample_UITesterActions
        {
            private @SamplePlayerControls m_Wrapper;
            public Sample_UITesterActions(@SamplePlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @TestHotkeyA => m_Wrapper.m_Sample_UITester_TestHotkeyA;
            public InputAction @TestHotkeyHoldA => m_Wrapper.m_Sample_UITester_TestHotkeyHoldA;
            public InputAction @TestHotkeyB => m_Wrapper.m_Sample_UITester_TestHotkeyB;
            public InputAction @TestHotkeyX => m_Wrapper.m_Sample_UITester_TestHotkeyX;
            public InputAction @TestHotkeyHoldX => m_Wrapper.m_Sample_UITester_TestHotkeyHoldX;
            public InputAction @TestHotkeyY => m_Wrapper.m_Sample_UITester_TestHotkeyY;
            public InputAction @TestHotkeyKeyboardOnly => m_Wrapper.m_Sample_UITester_TestHotkeyKeyboardOnly;
            public InputActionMap Get() { return m_Wrapper.m_Sample_UITester; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Sample_UITesterActions set) { return set.Get(); }
            public void SetCallbacks(ISample_UITesterActions instance)
            {
                if (m_Wrapper.m_Sample_UITesterActionsCallbackInterface != null)
                {
                    @TestHotkeyA.started -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyA;
                    @TestHotkeyA.performed -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyA;
                    @TestHotkeyA.canceled -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyA;
                    @TestHotkeyHoldA.started -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyHoldA;
                    @TestHotkeyHoldA.performed -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyHoldA;
                    @TestHotkeyHoldA.canceled -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyHoldA;
                    @TestHotkeyB.started -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyB;
                    @TestHotkeyB.performed -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyB;
                    @TestHotkeyB.canceled -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyB;
                    @TestHotkeyX.started -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyX;
                    @TestHotkeyX.performed -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyX;
                    @TestHotkeyX.canceled -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyX;
                    @TestHotkeyHoldX.started -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyHoldX;
                    @TestHotkeyHoldX.performed -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyHoldX;
                    @TestHotkeyHoldX.canceled -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyHoldX;
                    @TestHotkeyY.started -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyY;
                    @TestHotkeyY.performed -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyY;
                    @TestHotkeyY.canceled -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyY;
                    @TestHotkeyKeyboardOnly.started -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyKeyboardOnly;
                    @TestHotkeyKeyboardOnly.performed -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyKeyboardOnly;
                    @TestHotkeyKeyboardOnly.canceled -= m_Wrapper.m_Sample_UITesterActionsCallbackInterface.OnTestHotkeyKeyboardOnly;
                }
                m_Wrapper.m_Sample_UITesterActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @TestHotkeyA.started += instance.OnTestHotkeyA;
                    @TestHotkeyA.performed += instance.OnTestHotkeyA;
                    @TestHotkeyA.canceled += instance.OnTestHotkeyA;
                    @TestHotkeyHoldA.started += instance.OnTestHotkeyHoldA;
                    @TestHotkeyHoldA.performed += instance.OnTestHotkeyHoldA;
                    @TestHotkeyHoldA.canceled += instance.OnTestHotkeyHoldA;
                    @TestHotkeyB.started += instance.OnTestHotkeyB;
                    @TestHotkeyB.performed += instance.OnTestHotkeyB;
                    @TestHotkeyB.canceled += instance.OnTestHotkeyB;
                    @TestHotkeyX.started += instance.OnTestHotkeyX;
                    @TestHotkeyX.performed += instance.OnTestHotkeyX;
                    @TestHotkeyX.canceled += instance.OnTestHotkeyX;
                    @TestHotkeyHoldX.started += instance.OnTestHotkeyHoldX;
                    @TestHotkeyHoldX.performed += instance.OnTestHotkeyHoldX;
                    @TestHotkeyHoldX.canceled += instance.OnTestHotkeyHoldX;
                    @TestHotkeyY.started += instance.OnTestHotkeyY;
                    @TestHotkeyY.performed += instance.OnTestHotkeyY;
                    @TestHotkeyY.canceled += instance.OnTestHotkeyY;
                    @TestHotkeyKeyboardOnly.started += instance.OnTestHotkeyKeyboardOnly;
                    @TestHotkeyKeyboardOnly.performed += instance.OnTestHotkeyKeyboardOnly;
                    @TestHotkeyKeyboardOnly.canceled += instance.OnTestHotkeyKeyboardOnly;
                }
            }
        }
        public Sample_UITesterActions @Sample_UITester => new Sample_UITesterActions(this);
        private int m_KeyboardMouseSchemeIndex = -1;
        public InputControlScheme KeyboardMouseScheme
        {
            get
            {
                if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
                return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
            }
        }
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        private int m_TouchSchemeIndex = -1;
        public InputControlScheme TouchScheme
        {
            get
            {
                if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
                return asset.controlSchemes[m_TouchSchemeIndex];
            }
        }
        public interface ISample_PlayJumperActions
        {
            void OnJumperMovement(InputAction.CallbackContext context);
            void OnJumperJump(InputAction.CallbackContext context);
            void OnSwitchToChopper(InputAction.CallbackContext context);
        }
        public interface ISample_PlayChopperActions
        {
            void OnChopperMovement(InputAction.CallbackContext context);
            void OnSwitchToJumper(InputAction.CallbackContext context);
        }
        public interface ISample_PlaySharedActions
        {
            void OnToggleMenu(InputAction.CallbackContext context);
        }
        public interface ISample_UIActions
        {
            void OnNavigate(InputAction.CallbackContext context);
            void OnSubmit(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
            void OnPoint(InputAction.CallbackContext context);
            void OnClick(InputAction.CallbackContext context);
            void OnScrollWheel(InputAction.CallbackContext context);
            void OnMiddleClick(InputAction.CallbackContext context);
            void OnRightClick(InputAction.CallbackContext context);
            void OnTrackedDevicePosition(InputAction.CallbackContext context);
            void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
        }
        public interface ISample_CommonHotkeysActions
        {
            void OnBack(InputAction.CallbackContext context);
            void OnConfirm(InputAction.CallbackContext context);
            void OnNextSection(InputAction.CallbackContext context);
            void OnPrevSection(InputAction.CallbackContext context);
            void OnNextListEntry(InputAction.CallbackContext context);
            void OnPrevListEntry(InputAction.CallbackContext context);
            void OnHorizontalScroll(InputAction.CallbackContext context);
            void OnVerticalScroll(InputAction.CallbackContext context);
        }
        public interface ISample_UITesterActions
        {
            void OnTestHotkeyA(InputAction.CallbackContext context);
            void OnTestHotkeyHoldA(InputAction.CallbackContext context);
            void OnTestHotkeyB(InputAction.CallbackContext context);
            void OnTestHotkeyX(InputAction.CallbackContext context);
            void OnTestHotkeyHoldX(InputAction.CallbackContext context);
            void OnTestHotkeyY(InputAction.CallbackContext context);
            void OnTestHotkeyKeyboardOnly(InputAction.CallbackContext context);
        }
    }
}
